architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/dimdoors.accesswidener")
}

repositories {
    maven {
        url = "https://maven.shedaniel.me/"
    }
    mavenCentral()
    maven {
        url = "https://jitpack.io"
    }
    maven { url "https://maven.bai.lol" }
    maven {
        url "https://cursemaven.com"
    }
    maven { url "https://maven.enginehub.org/repo/" }
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"
    modApi "me.shedaniel.cloth:cloth-config:9.0.94"
    modCompileOnlyApi "mcp.mobius.waila:wthit-api:fabric-${wthitVersion}"

    modApi "com.flowpowered:flow-math:1.0.3"
    modApi "org.jgrapht:jgrapht-core:1.1.0"
    modApi "com.github.DimensionalDevelopment:poly2tri.java:0.1.1"

    modApi "com.sk89q.worldedit:worldedit-core:${rootProject.worldedit}"
}

sourceSets {
    main {
        java {
            srcDir "src/main/schematics"
            srcDir "src/main/config"
        }
        resources {
            srcDirs "src/main/generated"
        }
    }
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
