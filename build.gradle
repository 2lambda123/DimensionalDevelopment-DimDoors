//file:noinspection GroovyUnusedAssignment
//file:noinspection GroovyAssignabilityCheck

plugins {
    id 'net.minecraftforge.gradle' version '5.1+'
    id 'io.franzbecker.gradle-lombok' version '5.+'
    id 'wtf.gofancy.fancygradle' version '1.1.+'
}

fancyGradle {
    patches {
        resources
        coremods
        asm
        mergetool
    }
}

// Mod version
version = "3.1.0"
group = "org.dimdev.dimdoors"
archivesBaseName = "DimensionalDoors"

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

// Configuration
minecraft {
    mappings channel: 'stable', version: '39-1.12'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    google()
    mavenCentral()
    maven {
        url = uri('https://jitpack.io')
    }
    maven {
        url = uri('https://oss.sonatype.org/content/repositories/public/')
    }
}


dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
	embed('com.flowpowered:flow-math:1.0.3')
    embed('org.jgrapht:jgrapht-core:1.4.0')
    embed('com.github.DimensionalDevelopment:poly2tri.java:master-SNAPSHOT')
    compileOnly 'com.github.DimensionalDevelopment:AnnotatedNBT:-SNAPSHOT'
    compileOnly 'io.github.opencubicchunks:cubicchunks:1.12.2-0.0.819.0-SNAPSHOT'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    inputs.property 'version', project.version
    inputs.property 'mcversion', '1.12.2'
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': '1.12.2'
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes([
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    from(configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }
}

jar.finalizedBy('reobfJar')

tasks.register('generatePocketSchematics', JavaExec) {
    dependsOn jar
    classpath = files('build/libs/' + jar.archiveFileName)
    classpath += sourceSets.main.runtimeClasspath
    main = "org.dimdev.dimdoors.shared.tools.SchematicGenerator"
    args = ["src/main/resources/assets/dimdoors/pockets/schematic"]
}