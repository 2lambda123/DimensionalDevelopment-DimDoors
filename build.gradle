plugins {
	id 'net.minecraftforge.gradle' version '5.1+'
	id 'com.github.johnrengelman.shadow' version '7.1.+'
	id 'org.spongepowered.mixin' version '0.7.+'
	id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = '5.1.1-1.19.3'
group = 'org.dimdev.dimdoors'
archivesBaseName = 'DimensionalDoors'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
	mappings channel: 'parchment', version: '2023.02.26-1.19.3'
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	runs {
		def mixinStuff = [
				'-Dmixin.debug.export=true',
				'-Dmixin.hotSwap=true',
				'-Dmixin.checks.interfaces=true',
				'-mixin.config="dimdoors.mixin.json"'
		]
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			args mixinStuff
			mods {
				dimdoors {
					source sourceSets.main
				}
			}
		}
		server {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			args mixinStuff
			mods {
				musictriggers {
					source sourceSets.main
				}
			}
		}
		data {
			workingDirectory project.file('build/datagen')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
			mods {
				dimdoors {
					source sourceSets.main
				}
			}
		}
	}
}

repositories {
	mavenCentral()
	maven {
		name = 'Modrinth'
		url = 'https://api.modrinth.com/maven'
		content {
			includeGroup 'maven.modrinth'
		}
	}
	maven {
		url = "https://jitpack.io"
	}

}

sourceSets {
	main {
		java {
			srcDir "src/main/schematics"
			srcDir "src/main/config"
			srcDirs "src/main/datagen"
		}
		resources {
			srcDirs "src/main/generated"
		}
	}
}

configurations {
	shade
	implementation.extendsFrom(shade)
	shadow.extendsFrom shade
}

dependencies {
	minecraft 'net.minecraftforge:forge:1.19.3-44.1.23'

	//mixin
	annotationProcessor('org.spongepowered:mixin:0.8.5:processor')

	//mods
	implementation fg.deobf('maven.modrinth:cloth-config:9.0.94+forge')


	shadow("org.spongepowered:math:2.0.1")
	shadow("org.jgrapht:jgrapht-core:1.1.0")
	shadow("com.github.DimensionalDevelopment:poly2tri.java:0.1.1")

}

shadowJar {
	configurations = [project.configurations.shadow]
	classifier ''
	mergeServiceFiles()
}


reobf {
	shadowJar {
		dependsOn createMcpToSrg
		mappings = createMcpToSrg.output
	}
}

mixin {
	add sourceSets.main, "dimdoors.refmap.json"
}

processResources {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	from (sourceSets.main.resources.srcDirs) {
		include 'META-INF/mods.toml'
		expand 'version': project.version
	}
}

jar {
	manifest {
		attributes([
				"Specification-Version"   : project.version,
				"Implementation-Title"    : project.name,
				"TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
				"TweakOrder": 0,
				"MixinConfigs": "dimdoors.mixins.json"
		])
	}
}

jar.finalizedBy('reobfJar')

tasks.assemble.dependsOn shadowJar
