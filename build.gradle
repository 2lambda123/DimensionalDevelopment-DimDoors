buildscript {
    repositories {
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:4.1.10'
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version '1.11'
    id 'java'
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

repositories {
    maven { url = "https://jitpack.io" }
    maven { url = 'http://oss.sonatype.org/content/repositories/public/' }
    maven {
        url 'https://repo.maven.apache.org/maven2'
        name 'Maven Central'
    }
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

// Minecraft, MCP, Forge, and Java versions
sourceCompatibility = targetCompatibility = "1.8"
ext.mcversion = "1.12.2"
ext.forgeversion = "14.23.5.2860"

// Mod version
version = "3.0.11"
group = "org.dimdev.dimdoors"
archivesBaseName = "DimensionalDoors"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

// Build number
String fullVersion = ext.mcversion + "-" + version
String jarVersion = fullVersion.replace("+", "-") // Github/Travis doesn't seem to support + in filenames

// Configuration
minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    accessTransformer = file('src/main/resources/META-INF/musictriggers_at.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {
	embed 'com.flowpowered:flow-math:1.0.3'
    embed 'org.jgrapht:jgrapht-core:1.1.0'
    embed 'com.github.DimensionalDevelopment:poly2tri.java:master-SNAPSHOT'
    compileOnly 'com.github.DimensionalDevelopment:AnnotatedNBT:-SNAPSHOT'
    compileOnly 'io.github.opencubicchunks:cubicchunks:1.12.2-0.0.819.0-SNAPSHOT'
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
	minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
}

// Tasks
compileJava {
    //options.compilerArgs += "-proc:only" // To debug AnnotatedNBT code generation
}

jar {
    archiveName = archivesBaseName + "-" + jarVersion + ".jar"
    from(configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }
}

jar.finalizedBy('reobfJar')

sourceSets.main.resources { srcDir 'src/generated/resources' }

processResources {
    // This will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", "1.12.2"

    // Replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': "1.12.2"
    }

    // Copy everything else except mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task generatePocketSchematics(dependsOn: jar, type: JavaExec, group: "dimdoors") {
    classpath = files('build/libs/' + jar.archiveName)
    classpath += sourceSets.main.runtimeClasspath
    main = "org.dimdev.dimdoors.shared.tools.SchematicGenerator"
    args = ["src/main/resources/assets/dimdoors/pockets/schematic"]
}
